{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<h1>Live stocks</h1>\\n<table class=\\\"table table-striped col-6\\\">\\n  <thead>\\n    <th>Name</th>\\n    <th>Price</th>\\n    <th width=\\\"300\\\">Last Updated</th>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let stock of stocks; trackBy:stock\\\">\\n      <td>{{stock.name | uppercase}}</td>\\n      <td [style.backgroundColor]=\\\"stock.color\\\">{{stock.price | number:'1.0-2'}}</td>\\n      <td>{{stock.lastUpdated | timeago}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from \"@angular/core\";\nimport { SocketService } from \"./socket.service\";\n\nclass Stock {\n  name: string;\n  price: number;\n  lastUpdated: Date;\n  color: string;\n  bestPrice: number;\n}\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent {\n  stocks: Stock[] = [];\n  constructor(private socketService: SocketService) {\n    this.initIoConnection();\n  }\n  private initIoConnection(): void {\n    this.socketService.initSocket();\n\n    this.socketService.onMessage().subscribe((message: any) => {\n      if (message.data !== undefined && message.data !== null) {\n        JSON.parse(message.data).forEach(stock => {\n          let find = this.stocks.find(x => x.name === stock[0]);\n          if (!find) {\n            find = new Stock();\n            find.bestPrice = Number(stock[1]);\n            this.stocks.push(find);\n          }\n          find.name = stock[0];\n          if (find.bestPrice < Number(stock[1])) {\n            find.color = \"green\";\n            find.bestPrice = Number(stock[1]);\n          } else if (find.bestPrice > Number(stock[1])) {\n            find.color = \"red\";\n          } else {\n            find.color = \"white\";\n          }\n          find.price = Number(stock[1]);\n          find.lastUpdated = new Date();\n        });\n      }\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TimeagoModule } from 'ngx-timeago';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    TimeagoModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observer , Observable} from 'rxjs';\n\nimport * as socketIo from 'socket.io-client';\n\nconst SERVER_URL = 'ws://stocks.mnet.website';\n\n@Injectable({\n  providedIn:\"root\"\n})\nexport class SocketService {\n    private socket;\n\n    public initSocket(): void {\n      this.socket = new WebSocket(SERVER_URL);\n\n    }\n\n    public send(message: any): void {\n        this.socket.emit('message', message);\n    }\n\n    public onMessage(): Observable<any> {\n        return new Observable<any>(observer => {\n            this.socket.onmessage =  (data: any) => observer.next(data);\n        });\n    }\n\n    public onEvent(event: any): Observable<any> {\n        return new Observable<any>(observer => {\n            this.socket.on(event, () => observer.next());\n        });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}